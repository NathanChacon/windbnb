{"version":3,"sources":["assets/images/logo.svg","components/SearchBar/SearchBar.js","views/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","useState","isSearchActivated","setIsSearchActivated","listData","setListData","string","country","city","place","setPlace","host","setHost","useEffect","id","className","onClick","event","target","onClickOverlay","src","Logo","style","width","height","htmlFor","type","autoComplete","value","onChange","onPlaceChange","map","list","title","marginRight","icon","faMapMarkerAlt","onSearch","faSearch","Home","staysDataSource","setStaysDataSource","placesListDataSource","stays","setStays","startStaysData","fetch","headers","then","response","json","data","dataAux","index","isImageLoaded","filterStaysByString","filter","stay","toLowerCase","includes","placeString","listValues","filteredStay","hostsNumber","filteredStays","filterStaysByPlace","isNaN","parseInt","number","maxGuests","filterStaysByNumberOfHosts","photo","onLoad","setTimeout","superHost","color","faStar","padding","margin","rating","count","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d97fb42a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.beef9462.svg\";","import Logo from '../../assets/images/logo.svg'\r\nimport {useState, useEffect} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMapMarkerAlt, faSearch} from '@fortawesome/free-solid-svg-icons'\r\nimport  './SearchBar.css'\r\nfunction SearchBar(props){\r\n    const [isSearchActivated, setIsSearchActivated] = useState(false)\r\n    const [listData, setListData] = useState(props.listData)\r\n    const [place, setPlace] = useState({string: '', country:null, city:null})\r\n    const [host, setHost] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        setListData(props.listData)\r\n    },[props])\r\n\r\n    const onClickSearch = () => {\r\n            if(isSearchActivated){\r\n                props.onSearch(place, host)\r\n            }\r\n            setIsSearchActivated(!isSearchActivated)\r\n    }\r\n\r\n    const onPlaceChange = (event) => {\r\n        setPlace({...place, string: event.target.value, country: null, city: null})\r\n        props.onPlaceChange(event.target.value)\r\n    }\r\n\r\n    const onClickPlace = (value) => {\r\n        setPlace({...place, country: value.value.country, city: value.value.city, string: value.title})\r\n    }\r\n\r\n    const onClickHost = (value) => {\r\n\r\n    }\r\n\r\n    const onHostChange = (event) => {\r\n        setHost(event.target.value)\r\n    }\r\n\r\n    const onClickOverlay = (event) => {\r\n        if(event.target.id === 'overlay' || event.target.id === 'searchBar'){\r\n            setIsSearchActivated(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"overlay\" className={`search-overlay ${isSearchActivated ? 'is-activated' : ''}`} onClick = {(event) => {onClickOverlay(event)}}>\r\n            <div id=\"searchBar\" className=\"search-bar-container bg-primary contrast-text d-flex justify-content-space-between\">\r\n                <div className=\"image-container d-flex align-items-center justify-content-center\">\r\n                    <img src={Logo} style={{width:'100%', height:'100%'}}></img>\r\n                </div>\r\n                <div className=\"search-inputs-container bg-primary d-flex\">\r\n                    <div className=\"input-holder d-flex col\">\r\n                        <label htmlFor=\"places\">location</label>\r\n                        <input id=\"places\" className=\"places\" type=\"search\" autoComplete=\"off\" value={place.string} onChange={onPlaceChange}></input>\r\n                        <ul>\r\n                            {\r\n                                listData.map((list) => {\r\n                                    return <li className=\"list\" onClick={() => {onClickPlace(list)}}>\r\n                                                <FontAwesomeIcon style={{marginRight:'5px'}} icon={faMapMarkerAlt} />\r\n                                                {list.title}\r\n                                            </li>\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"input-holder d-flex col\">\r\n                        <label htmlFor=\"hosts\">guests</label>\r\n                        <input id=\"hosts\" className=\"hosts\" type=\"number\" value={host} onChange={onHostChange}></input>\r\n                    </div>\r\n                    <button onClick={() => {onClickSearch()}} className=\"search-button\">\r\n                        <FontAwesomeIcon className=\"search-icon\" icon={faSearch}/>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar","import SearchBar from '../../components/SearchBar/SearchBar'\r\nimport {useState, useEffect, Fragment} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport './Home.css'\r\nfunction Home() {\r\n  const [staysDataSource, setStaysDataSource] = useState([])\r\n  const [placesListDataSource, setPlacesListDataSource] = useState([\r\n      {\r\n        city: \"Helsinki\",\r\n        country: \"Finland\"\r\n      },\r\n      {\r\n        city: \"Oulu\",\r\n        country: \"Finland\"\r\n      },\r\n      {\r\n        city: \"Vaasa\",\r\n        country: \"Finland\"\r\n      },\r\n      {\r\n        city: \"Turku\",\r\n        country: \"Finland\"\r\n      }\r\n  ]) \r\n  const [stays, setStays] = useState([])\r\n  const [listData, setListData] = useState([])\r\n\r\n  useEffect(() => {\r\n    startStaysData()\r\n  },[])\r\n\r\n  const startStaysData = ( ) => {\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n      'Accept': 'application/json'\r\n    }\r\n\r\n    fetch('stays.json', {headers: headers})\r\n    .then(function(response) {\r\n      return response.json();\r\n    })\r\n    .then(function(data) {\r\n      const dataAux = data.map((data, index) => {\r\n        data.id = index\r\n        data.isImageLoaded = false\r\n        return data\r\n      })\r\n      \r\n      setStaysDataSource(dataAux)\r\n      setStays(dataAux)\r\n    });\r\n  }\r\n\r\n  const onPlaceChange = (placeString) => {\r\n    const filteredStays = filterStaysByString(placesListDataSource, placeString)\r\n    const listValues = filteredStays.map((filteredStay) => {\r\n      return {\r\n        title: filteredStay.city + ', ' + filteredStay.country,\r\n        value: {\r\n          country: filteredStay.country,\r\n          city: filteredStay.city\r\n        }\r\n      }\r\n    })\r\n    setListData(listValues)\r\n  }\r\n\r\n  const filterStaysByString = (stays, string) => {\r\n    const filteredStays = stays.filter((stay) => stay.country.toLowerCase().includes(string.toLowerCase()) || stay.city.toLowerCase().includes(string.toLowerCase()))\r\n    return filteredStays\r\n  }\r\n\r\n  const filterStaysByPlace = (stays, country, city) => {\r\n    const filteredStays = stays.filter((stay) => stay.country.toLowerCase().includes(country.toLowerCase()) && stay.city.toLowerCase().includes(city.toLowerCase()))\r\n    return filteredStays\r\n  }\r\n\r\n  const filterStaysByNumberOfHosts = (stays, number) => {\r\n    const filteredStays = stays.filter((stay) => number <= stay.maxGuests)\r\n\r\n    return filteredStays\r\n  }\r\n\r\n  const onSearch = (place, hostsNumber) => {\r\n    let filteredStays\r\n    if(place.country && place.city){\r\n      filteredStays = filterStaysByPlace(staysDataSource, place.country, place.city)\r\n    }\r\n    else{\r\n      filteredStays = filterStaysByString(staysDataSource, place.string)\r\n    }\r\n\r\n    if(!isNaN(parseInt(hostsNumber))){\r\n      filteredStays = filterStaysByNumberOfHosts(filteredStays, hostsNumber)\r\n    }\r\n\r\n    setStays(filteredStays)\r\n  }\r\n\r\n  const onImageLoad = (value) => {\r\n    setTimeout(() => {\r\n      setStays(stays.map((stay) => {\r\n        if(stay.id === value.id){\r\n          stay.isImageLoaded = true\r\n        }\r\n        return stay\r\n      }))\r\n    }, 500)\r\n\r\n  }\r\n\r\n  return (\r\n    <section className=\"main-container bg-primary contrast-text\">\r\n      <SearchBar onPlaceChange={onPlaceChange} listData = {listData} onSearch={onSearch}></SearchBar>\r\n      <div className=\"cards-container\">\r\n        {\r\n          stays.map((stay, index) => {\r\n            return <div className=\"card-container d-flex col\" key={index}> \r\n                      {\r\n                        stay.isImageLoaded\r\n                        ? ''\r\n                        : <figure className=\"img-skeleton\"><Skeleton style={{width:'100%', height:'100%'}}></Skeleton></figure>\r\n                      }\r\n                      <figure className={stay.isImageLoaded ? 'isVisible' : 'isHidden'}>\r\n                        <img src={stay.photo} onLoad={() => onImageLoad(stay)}/>\r\n                      </figure>\r\n                      {\r\n                        stay.isImageLoaded \r\n                        ?<Fragment>\r\n                          <div className=\"w-100 d-flex align-items-center justify-content-space-between\">\r\n                              <div className=\"d-flex align-items-center\">\r\n                                {\r\n                                  stay.superHost \r\n                                      ? <h5 className=\"super-host\">SUPER HOST</h5> \r\n                                      : ''\r\n                                }\r\n                                <h6 style={{color:'#828282'}}>{stay.type}</h6>\r\n                              </div>\r\n                              <div className=\"d-flex\">\r\n                                <FontAwesomeIcon icon={faStar} style={{color:'#EB5757'}}/>\r\n                                <p style={{padding:0, margin:0}}>{stay.rating}</p>\r\n                              </div>\r\n                            </div>\r\n                            <h4 className=\"title\">{stay.title}</h4>\r\n                         </Fragment>\r\n                         :<Skeleton count={2}></Skeleton>\r\n                      }\r\n                  </div>\r\n          })\r\n        }\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Home;","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\"\nimport utils from './styles/utils.css'\nimport colors from './styles/colors.css'\nimport Home from './views/Home/Home'\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n              <Home />\n        </Route>\n      </Switch>\n    </Router>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}